{
  "manifestVersion": "3.2",
  "admin": {
    "address": "0xB7B2499BE1258DdFd647934E11Bebfc9f6879816",
    "txHash": "0xa47531ce7edd8bf98b712e19665a38df7cfcd89ece879dab75169194d7b0e617"
  },
  "proxies": [
    {
      "address": "0x6ff82b94053652a60B38137938b7b0780EFA6e7b",
      "txHash": "0xbfffd821b0ccb0349bf536fc6382cc252425529b5774e9deb57fd7c0a00e50b5",
      "kind": "transparent"
    },
    {
      "address": "0x7A278454999202abCB8BbC4F75c3d0763A354818",
      "txHash": "0xd3094bf0ef7b3eede0e9a393a90b24beb0e2f7f2d31905777b7e918b9532e26f",
      "kind": "transparent"
    }
  ],
  "impls": {
    "0f2aad4cdf956a6b3e4b46476aadb337cc6d17756ed29fba3bccdaab128355f3": {
      "address": "0xAdEeA7299ccd5572FfcE19c96d6Ec17486fE0d3e",
      "txHash": "0xd3294414236e7a4f46d41cd1d5d60e02e4cc5c6b22e2f9db6853e104df0cad8d",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "JandraToken.sol:690"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "JandraToken.sol:695"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "JandraToken.sol:862"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "JandraToken.sol:1094"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_allowances",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "src": "JandraToken.sol:1096"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_totalSupply",
            "type": "t_uint256",
            "src": "JandraToken.sol:1098"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "JandraToken.sol:1100"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "JandraToken.sol:1101"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)45_storage",
            "src": "JandraToken.sol:1419"
          },
          {
            "contract": "ERC20BurnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "JandraToken.sol:2038"
          },
          {
            "contract": "ERC20SnapshotUpgradeable",
            "label": "_accountBalanceSnapshots",
            "type": "t_mapping(t_address,t_struct(Snapshots)2941_storage)",
            "src": "JandraToken.sol:1846"
          },
          {
            "contract": "ERC20SnapshotUpgradeable",
            "label": "_totalSupplySnapshots",
            "type": "t_struct(Snapshots)2941_storage",
            "src": "JandraToken.sol:1847"
          },
          {
            "contract": "ERC20SnapshotUpgradeable",
            "label": "_currentSnapshotId",
            "type": "t_struct(Counter)798_storage",
            "src": "JandraToken.sol:1850"
          },
          {
            "contract": "ERC20SnapshotUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)46_storage",
            "src": "JandraToken.sol:1985"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "JandraToken.sol:886"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "JandraToken.sol:942"
          },
          {
            "contract": "EIP712Upgradeable",
            "label": "_HASHED_NAME",
            "type": "t_bytes32",
            "src": "JandraToken.sol:746"
          },
          {
            "contract": "EIP712Upgradeable",
            "label": "_HASHED_VERSION",
            "type": "t_bytes32",
            "src": "JandraToken.sol:747"
          },
          {
            "contract": "EIP712Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "JandraToken.sol:828"
          },
          {
            "contract": "ERC20PermitUpgradeable",
            "label": "_nonces",
            "type": "t_mapping(t_address,t_struct(Counter)798_storage)",
            "src": "JandraToken.sol:1447"
          },
          {
            "contract": "ERC20PermitUpgradeable",
            "label": "_PERMIT_TYPEHASH",
            "type": "t_bytes32",
            "src": "JandraToken.sol:1450"
          },
          {
            "contract": "ERC20PermitUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "JandraToken.sol:1515"
          },
          {
            "contract": "ERC20VotesUpgradeable",
            "label": "_delegates",
            "type": "t_mapping(t_address,t_address)",
            "src": "JandraToken.sol:1557"
          },
          {
            "contract": "ERC20VotesUpgradeable",
            "label": "_checkpoints",
            "type": "t_mapping(t_address,t_array(t_struct(Checkpoint)2266_storage)dyn_storage)",
            "src": "JandraToken.sol:1558"
          },
          {
            "contract": "ERC20VotesUpgradeable",
            "label": "_totalSupplyCheckpoints",
            "type": "t_array(t_struct(Checkpoint)2266_storage)dyn_storage",
            "src": "JandraToken.sol:1559"
          },
          {
            "contract": "ERC20VotesUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)47_storage",
            "src": "JandraToken.sol:1780"
          },
          {
            "contract": "JandraToken",
            "label": "_cap",
            "type": "t_uint256",
            "src": "JandraToken.sol:2202"
          },
          {
            "contract": "JandraToken",
            "label": "preminedAmount",
            "type": "t_uint256",
            "src": "JandraToken.sol:2203"
          },
          {
            "contract": "JandraToken",
            "label": "isMintPremined",
            "type": "t_bool",
            "src": "JandraToken.sol:2204"
          },
          {
            "contract": "JandraToken",
            "label": "isMinter",
            "type": "t_mapping(t_address,t_bool)",
            "src": "JandraToken.sol:2206"
          }
        ],
        "types": {
          "t_uint256": {
            "label": "uint256"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_address)": {
            "label": "mapping(address => address)"
          },
          "t_mapping(t_address,t_array(t_struct(Checkpoint)2266_storage)dyn_storage)": {
            "label": "mapping(address => struct ERC20VotesUpgradeable.Checkpoint[])"
          },
          "t_array(t_struct(Checkpoint)2266_storage)dyn_storage": {
            "label": "struct ERC20VotesUpgradeable.Checkpoint[]"
          },
          "t_struct(Checkpoint)2266_storage": {
            "label": "struct ERC20VotesUpgradeable.Checkpoint",
            "members": [
              {
                "label": "fromBlock",
                "type": "t_uint32"
              },
              {
                "label": "votes",
                "type": "t_uint224"
              }
            ]
          },
          "t_uint32": {
            "label": "uint32"
          },
          "t_uint224": {
            "label": "uint224"
          },
          "t_array(t_uint256)47_storage": {
            "label": "uint256[47]"
          },
          "t_mapping(t_address,t_struct(Counter)798_storage)": {
            "label": "mapping(address => struct CountersUpgradeable.Counter)"
          },
          "t_struct(Counter)798_storage": {
            "label": "struct CountersUpgradeable.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256"
              }
            ]
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_mapping(t_address,t_struct(Snapshots)2941_storage)": {
            "label": "mapping(address => struct ERC20SnapshotUpgradeable.Snapshots)"
          },
          "t_struct(Snapshots)2941_storage": {
            "label": "struct ERC20SnapshotUpgradeable.Snapshots",
            "members": [
              {
                "label": "ids",
                "type": "t_array(t_uint256)dyn_storage"
              },
              {
                "label": "values",
                "type": "t_array(t_uint256)dyn_storage"
              }
            ]
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_array(t_uint256)46_storage": {
            "label": "uint256[46]"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]"
          }
        }
      }
    },
    "5a29bbc7a5e1514c4da4dd809862047e85ee96e98e69b220a6d47bb554a83bb4": {
      "address": "0xd741caF17470bcFf911509763Ae89a016fa91990",
      "txHash": "0x4603ed45ef3053bcff01d275dff0180786b6fa88a09a58f6e3308f238f441c28",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "JandraTokenV2.sol:690"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "JandraTokenV2.sol:695"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "JandraTokenV2.sol:862"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "JandraTokenV2.sol:1094"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_allowances",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "src": "JandraTokenV2.sol:1096"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_totalSupply",
            "type": "t_uint256",
            "src": "JandraTokenV2.sol:1098"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "JandraTokenV2.sol:1100"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "JandraTokenV2.sol:1101"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)45_storage",
            "src": "JandraTokenV2.sol:1419"
          },
          {
            "contract": "ERC20BurnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "JandraTokenV2.sol:2038"
          },
          {
            "contract": "ERC20SnapshotUpgradeable",
            "label": "_accountBalanceSnapshots",
            "type": "t_mapping(t_address,t_struct(Snapshots)6762_storage)",
            "src": "JandraTokenV2.sol:1846"
          },
          {
            "contract": "ERC20SnapshotUpgradeable",
            "label": "_totalSupplySnapshots",
            "type": "t_struct(Snapshots)6762_storage",
            "src": "JandraTokenV2.sol:1847"
          },
          {
            "contract": "ERC20SnapshotUpgradeable",
            "label": "_currentSnapshotId",
            "type": "t_struct(Counter)4619_storage",
            "src": "JandraTokenV2.sol:1850"
          },
          {
            "contract": "ERC20SnapshotUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)46_storage",
            "src": "JandraTokenV2.sol:1985"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "JandraTokenV2.sol:886"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "JandraTokenV2.sol:942"
          },
          {
            "contract": "EIP712Upgradeable",
            "label": "_HASHED_NAME",
            "type": "t_bytes32",
            "src": "JandraTokenV2.sol:746"
          },
          {
            "contract": "EIP712Upgradeable",
            "label": "_HASHED_VERSION",
            "type": "t_bytes32",
            "src": "JandraTokenV2.sol:747"
          },
          {
            "contract": "EIP712Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "JandraTokenV2.sol:828"
          },
          {
            "contract": "ERC20PermitUpgradeable",
            "label": "_nonces",
            "type": "t_mapping(t_address,t_struct(Counter)4619_storage)",
            "src": "JandraTokenV2.sol:1447"
          },
          {
            "contract": "ERC20PermitUpgradeable",
            "label": "_PERMIT_TYPEHASH",
            "type": "t_bytes32",
            "src": "JandraTokenV2.sol:1450"
          },
          {
            "contract": "ERC20PermitUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "JandraTokenV2.sol:1515"
          },
          {
            "contract": "ERC20VotesUpgradeable",
            "label": "_delegates",
            "type": "t_mapping(t_address,t_address)",
            "src": "JandraTokenV2.sol:1557"
          },
          {
            "contract": "ERC20VotesUpgradeable",
            "label": "_checkpoints",
            "type": "t_mapping(t_address,t_array(t_struct(Checkpoint)6087_storage)dyn_storage)",
            "src": "JandraTokenV2.sol:1558"
          },
          {
            "contract": "ERC20VotesUpgradeable",
            "label": "_totalSupplyCheckpoints",
            "type": "t_array(t_struct(Checkpoint)6087_storage)dyn_storage",
            "src": "JandraTokenV2.sol:1559"
          },
          {
            "contract": "ERC20VotesUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)47_storage",
            "src": "JandraTokenV2.sol:1780"
          },
          {
            "contract": "JandraToken",
            "label": "_cap",
            "type": "t_uint256",
            "src": "JandraToken.sol:2202"
          },
          {
            "contract": "JandraToken",
            "label": "preminedAmount",
            "type": "t_uint256",
            "src": "JandraToken.sol:2203"
          },
          {
            "contract": "JandraToken",
            "label": "isMintPremined",
            "type": "t_bool",
            "src": "JandraToken.sol:2204"
          },
          {
            "contract": "JandraToken",
            "label": "isMinter",
            "type": "t_mapping(t_address,t_bool)",
            "src": "JandraToken.sol:2206"
          }
        ],
        "types": {
          "t_uint256": {
            "label": "uint256"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_address)": {
            "label": "mapping(address => address)"
          },
          "t_mapping(t_address,t_array(t_struct(Checkpoint)6087_storage)dyn_storage)": {
            "label": "mapping(address => struct ERC20VotesUpgradeable.Checkpoint[])"
          },
          "t_array(t_struct(Checkpoint)6087_storage)dyn_storage": {
            "label": "struct ERC20VotesUpgradeable.Checkpoint[]"
          },
          "t_struct(Checkpoint)6087_storage": {
            "label": "struct ERC20VotesUpgradeable.Checkpoint",
            "members": [
              {
                "label": "fromBlock",
                "type": "t_uint32"
              },
              {
                "label": "votes",
                "type": "t_uint224"
              }
            ]
          },
          "t_uint32": {
            "label": "uint32"
          },
          "t_uint224": {
            "label": "uint224"
          },
          "t_array(t_uint256)47_storage": {
            "label": "uint256[47]"
          },
          "t_mapping(t_address,t_struct(Counter)4619_storage)": {
            "label": "mapping(address => struct CountersUpgradeable.Counter)"
          },
          "t_struct(Counter)4619_storage": {
            "label": "struct CountersUpgradeable.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256"
              }
            ]
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_mapping(t_address,t_struct(Snapshots)6762_storage)": {
            "label": "mapping(address => struct ERC20SnapshotUpgradeable.Snapshots)"
          },
          "t_struct(Snapshots)6762_storage": {
            "label": "struct ERC20SnapshotUpgradeable.Snapshots",
            "members": [
              {
                "label": "ids",
                "type": "t_array(t_uint256)dyn_storage"
              },
              {
                "label": "values",
                "type": "t_array(t_uint256)dyn_storage"
              }
            ]
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_array(t_uint256)46_storage": {
            "label": "uint256[46]"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]"
          }
        }
      }
    },
    "69f9f635ecafc6b691d5e9ca1c34e803d96f6bc11849b034ebe1bb81a940e879": {
      "address": "0xa94cFbb0158F0E6A66b812D870fbDab684c5301E",
      "txHash": "0xbe27f5abf8e3122ff93f29ff2a12d748638f08e5a32d7519f4ed58addf90c69d",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "JandraTokenV2.sol:690"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "JandraTokenV2.sol:695"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "JandraTokenV2.sol:862"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "JandraTokenV2.sol:1094"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_allowances",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "src": "JandraTokenV2.sol:1096"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_totalSupply",
            "type": "t_uint256",
            "src": "JandraTokenV2.sol:1098"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "JandraTokenV2.sol:1100"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "JandraTokenV2.sol:1101"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)45_storage",
            "src": "JandraTokenV2.sol:1419"
          },
          {
            "contract": "ERC20BurnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "JandraTokenV2.sol:2038"
          },
          {
            "contract": "ERC20SnapshotUpgradeable",
            "label": "_accountBalanceSnapshots",
            "type": "t_mapping(t_address,t_struct(Snapshots)6762_storage)",
            "src": "JandraTokenV2.sol:1846"
          },
          {
            "contract": "ERC20SnapshotUpgradeable",
            "label": "_totalSupplySnapshots",
            "type": "t_struct(Snapshots)6762_storage",
            "src": "JandraTokenV2.sol:1847"
          },
          {
            "contract": "ERC20SnapshotUpgradeable",
            "label": "_currentSnapshotId",
            "type": "t_struct(Counter)4619_storage",
            "src": "JandraTokenV2.sol:1850"
          },
          {
            "contract": "ERC20SnapshotUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)46_storage",
            "src": "JandraTokenV2.sol:1985"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "JandraTokenV2.sol:886"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "JandraTokenV2.sol:942"
          },
          {
            "contract": "EIP712Upgradeable",
            "label": "_HASHED_NAME",
            "type": "t_bytes32",
            "src": "JandraTokenV2.sol:746"
          },
          {
            "contract": "EIP712Upgradeable",
            "label": "_HASHED_VERSION",
            "type": "t_bytes32",
            "src": "JandraTokenV2.sol:747"
          },
          {
            "contract": "EIP712Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "JandraTokenV2.sol:828"
          },
          {
            "contract": "ERC20PermitUpgradeable",
            "label": "_nonces",
            "type": "t_mapping(t_address,t_struct(Counter)4619_storage)",
            "src": "JandraTokenV2.sol:1447"
          },
          {
            "contract": "ERC20PermitUpgradeable",
            "label": "_PERMIT_TYPEHASH",
            "type": "t_bytes32",
            "src": "JandraTokenV2.sol:1450"
          },
          {
            "contract": "ERC20PermitUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "JandraTokenV2.sol:1515"
          },
          {
            "contract": "ERC20VotesUpgradeable",
            "label": "_delegates",
            "type": "t_mapping(t_address,t_address)",
            "src": "JandraTokenV2.sol:1557"
          },
          {
            "contract": "ERC20VotesUpgradeable",
            "label": "_checkpoints",
            "type": "t_mapping(t_address,t_array(t_struct(Checkpoint)6087_storage)dyn_storage)",
            "src": "JandraTokenV2.sol:1558"
          },
          {
            "contract": "ERC20VotesUpgradeable",
            "label": "_totalSupplyCheckpoints",
            "type": "t_array(t_struct(Checkpoint)6087_storage)dyn_storage",
            "src": "JandraTokenV2.sol:1559"
          },
          {
            "contract": "ERC20VotesUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)47_storage",
            "src": "JandraTokenV2.sol:1780"
          },
          {
            "contract": "JandraTokenV2",
            "label": "_cap",
            "type": "t_uint256",
            "src": "JandraTokenV2.sol:2202"
          },
          {
            "contract": "JandraTokenV2",
            "label": "preminedAmount",
            "type": "t_uint256",
            "src": "JandraTokenV2.sol:2203"
          },
          {
            "contract": "JandraTokenV2",
            "label": "isMintPremined",
            "type": "t_bool",
            "src": "JandraTokenV2.sol:2204"
          },
          {
            "contract": "JandraTokenV2",
            "label": "isMinter",
            "type": "t_mapping(t_address,t_bool)",
            "src": "JandraTokenV2.sol:2206"
          }
        ],
        "types": {
          "t_uint256": {
            "label": "uint256"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_address)": {
            "label": "mapping(address => address)"
          },
          "t_mapping(t_address,t_array(t_struct(Checkpoint)6087_storage)dyn_storage)": {
            "label": "mapping(address => struct ERC20VotesUpgradeable.Checkpoint[])"
          },
          "t_array(t_struct(Checkpoint)6087_storage)dyn_storage": {
            "label": "struct ERC20VotesUpgradeable.Checkpoint[]"
          },
          "t_struct(Checkpoint)6087_storage": {
            "label": "struct ERC20VotesUpgradeable.Checkpoint",
            "members": [
              {
                "label": "fromBlock",
                "type": "t_uint32"
              },
              {
                "label": "votes",
                "type": "t_uint224"
              }
            ]
          },
          "t_uint32": {
            "label": "uint32"
          },
          "t_uint224": {
            "label": "uint224"
          },
          "t_array(t_uint256)47_storage": {
            "label": "uint256[47]"
          },
          "t_mapping(t_address,t_struct(Counter)4619_storage)": {
            "label": "mapping(address => struct CountersUpgradeable.Counter)"
          },
          "t_struct(Counter)4619_storage": {
            "label": "struct CountersUpgradeable.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256"
              }
            ]
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_mapping(t_address,t_struct(Snapshots)6762_storage)": {
            "label": "mapping(address => struct ERC20SnapshotUpgradeable.Snapshots)"
          },
          "t_struct(Snapshots)6762_storage": {
            "label": "struct ERC20SnapshotUpgradeable.Snapshots",
            "members": [
              {
                "label": "ids",
                "type": "t_array(t_uint256)dyn_storage"
              },
              {
                "label": "values",
                "type": "t_array(t_uint256)dyn_storage"
              }
            ]
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_array(t_uint256)46_storage": {
            "label": "uint256[46]"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]"
          }
        }
      }
    }
  }
}
